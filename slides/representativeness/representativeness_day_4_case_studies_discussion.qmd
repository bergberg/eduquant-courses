---
title: "Representativeness"
subtitle: "Day 4 (case studies discussion)"
author: "Pieter van den Berg"
date: 2023-10-17
date-format: long
format: eduquant-slides-revealjs
---


# Case Studies discussion

## Case study 3: acceptance policy change {.smaller .r-fit-text auto-animate=true}


#### Introduction


In this exercise, you will **estimate an appropriate adjustment and MoC A** to account for the bias introduced by having a **non-comparable acceptance policy** applied for exposures over part of the historical data set. 

```{r setup}
library(dplyr)
library(ggplot2)
library(ggblend)
library(patchwork)
library(ggrepel)
library(tidyr)
library(ggdist)
library(latex2exp)
source("../../Rscripts/utils.R")
cred_sim <- vroom::vroom("../../media/cred_sim.csv.gz")
cred_sim_acc <- vroom::vroom("../../media/cred_sim_acc.csv.gz")
cred_sim_acc_aggr_dr <- vroom::vroom("../../media/cred_sim_acc_aggr_dr.csv.gz")

t_acc_policy_change <- 70L


bg <- 'transparent'
ggtheme <- theme_minimal()+theme(
                           panel.background = element_rect(fill=bg, linetype = "blank"), 
                           plot.background = element_rect(fill=bg, color=NA), 
                           panel.grid.major = element_blank(), 
                           panel.grid.minor = element_blank(), 
                           legend.background = element_rect(fill=bg, linetype = "blank"), 
                           legend.box.background = element_rect(fill=bg, linetype = "blank"),
                           legend.position = "bottom",
                           legend.text = element_text(size=10),
                           legend.title = element_text(size=9)
                           )


```


 * Download the dataset from the slides website (`csv` or `xlsx`)
 * Use your favorite tool! Anything goes.
 * Bring the results for discussion to the next training
 * Or send them to [pieter@berg-sp.eu](mailto:pieter@berg-sp.eu)

## Case study 3: acceptance policy change {.smaller .r-fit-text auto-animate=true}
:::: columns

::: {.column #vcenter width="50%" .r-fit-text }


#### Description

 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70$
$$\text{acc_policy}(t_0): \begin{align*} t_0<t_{\text{change}} &=  U \\ t_0\ge t_{\text{change}} &=  V \end{align*}$$

 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$

#### Assignment

 * Estimate an appropriately adjusted long-run average default rate and MoC A
 * Bonus points: repeat, but this time ignore `a0`

::: 

::: {.column #vcenter width="50%" .r-fit-text }
```{r plot}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 

ggplot2::theme_set(ggtheme)
p1 <- cred_sim_acc_aggr_dr |> 
  filter(accepted=="Any", acc_policy=="Any") |>
  ggplot_rate_series(name = dr, alpha = 0.33) +
  geom_vline(xintercept = t_acc_policy_change, linewidth=0.25, linetype = "dashed") +
  labs(caption = "accepted + rejected")

p2 <- cred_sim_acc_aggr_dr |> 
  filter(accepted=="accepted", acc_policy=="Any") |>
  ggplot_rate_series(name = dr, alpha = 0.33) +
  geom_vline(xintercept = t_acc_policy_change, linewidth=0.25, linetype = "dashed") +
  labs(caption = "accepted only, any policy")

p3 <- cred_sim_acc_aggr_dr |> 
  filter(accepted=="accepted", acc_policy!="Any") |>
  group_by(acc_policy) |> 
  ggplot_rate_series(name = dr, alpha = 0.33) +
  coord_cartesian(ylim=c(0,0.05)) + 
  geom_vline(xintercept = t_acc_policy_change, linewidth=0.25, linetype = "dashed") +
  labs(caption = "accepted only, per policy") +
  theme(legend.title=element_blank()) 

(p1+p2)/p3

```
:::

::::


## Case study 3: acceptance policy change  {.smaller .r-fit-text auto-animate=true}


:::: columns
::: {.column width="50%" .r-fit-text }


| column    | description    |
|-------------|-------------|
|`i`| exposure id|
|`t`| time|
|`d`| in-default|
|`into_d_12`| into default within 12 months|
|`status`| `enter`, `stock`, `default` or `exit`|
|`m`|time since origination|
|`t0`| t of origination|
|`a0`| debt service to income at origination score|
|`acc_policy`| `U` or `V`|

:::
::: {.column width="50%" .r-fit-text .smaller}

```{r}
case_study_3_data <- readr::read_csv("../../media/case_study_3_data.csv.gz")
``` 

```{r echo=FALSE}
#| tbl-cap: "sample of 10 exposures" 

case_study_3_data |>
  filter(i %in% sample(i,10)) |> 
  as.data.frame()
```
[ [link to xlsx]{.underline}](/media/case_study_3_data.xlsx)

[ [link to csv.gz]{.underline}](/media/case_study_3_data.csv.gz)
:::
::::


## Case study 3: acceptance policy change  {.smaller .r-fit-text auto-animate=true}

```{r acc_calc2}

acc_policy_threshold <- c(U = 6.828507, V = 9.413053)
t_acc_policy_change <- 70L

df_acc_s <- case_study_3_data |> filter(!d) |> 
  group_by(acc_policy) |> 
  summarise_binom_rate_ci(name=dr, indicator = into_d_12, ci_fun = binom::binom.exact)

df_acc <- case_study_3_data |> filter(!d) |> 
  mutate(acc_policy = case_when(acc_policy == "U" & a0>acc_policy_threshold["V"] ~ "U(adj)", TRUE~ acc_policy)) |> 
  group_by(acc_policy) |> 
  summarise_binom_rate_ci(name=dr, indicator = into_d_12, ci_fun = binom::binom.exact)

df_acc_adj <- 
  bind_rows(
    adjusted = case_study_3_data |> 
  filter(acc_policy == "V" | a0>acc_policy_threshold["V"], !d) |> 
  summarise_binom_rate_ci(name=dr, indicator = into_d_12, ci_fun = binom::binom.exact) |> 
  mutate(type = "adjusted"),
  unadjusted = case_study_3_data |> filter(!d) |> 
      summarise_binom_rate_ci(name=dr, indicator = into_d_12, ci_fun = binom::binom.exact),
  .id = "type") 

```

:::: columns
::: {.column width="50%" .r-fit-text }

#### Description

 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70$
$$\text{acc_policy}(t_0): \begin{align*} t_0<t_{\text{change}} &=  U \\ t_0\ge t_{\text{change}} &=  V \end{align*}$$

 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$


:::
::: {.column width="50%" .r-fit-text .smaller}
```{r acc_simple_plot}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 
ggplot2::theme_set(ggtheme)
df_acc_s |> ggplot_rate_series(name=dr) + coord_cartesian(ylim=c(0,0.1)) +
  geom_vline(xintercept = t_acc_policy_change, linewidth=0.25, linetype = "dashed") 
```
:::
::::





## Case study 3: acceptance policy change  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70$
$$\text{acc_policy}(t_0): \begin{align*} t_0<t_{\text{change}} &=  U \\ t_0\ge t_{\text{change}} &=  V \end{align*}$$

 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$
:::::

 * $\Delta_{V} < \Delta_{U}$ (more stringent policy)
 * Loans that originate under `U` subset of those under `V`
 * We can simply take $U_{adj}: a_{0i} > \Delta_{V}$

:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 
ggplot2::theme_set(ggtheme)
df_acc |> ggplot_rate_series(name=dr) + coord_cartesian(ylim=c(0,0.1)) +
  geom_vline(xintercept = t_acc_policy_change, linewidth=0.25, linetype = "dashed")
```
:::
::::


## Case study 3: acceptance policy change  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70$
$$\text{acc_policy}(t_0): \begin{align*} t_0<t_{\text{change}} &=  U \\ t_0\ge t_{\text{change}} &=  V \end{align*}$$

 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$

:::::

 * Loans that originate under $U$ subset of those under $V$
 * We can simply take $U_{adj}: a_{0i} > \Delta_{V}$

:::
::: {.column width="50%" .r-fit-text .smaller}
```{r acc_adj_plot}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
```
:::
::::







## Case study 3: acceptance policy change  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * Acceptance policy change at $t_{\text{change}} = 70$
$$\text{acc_policy}(t_0): \begin{align*} t_0<t_{\text{change}} &=  U \\ t_0\ge t_{\text{change}} &=  V \end{align*}$$

 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$
 * We can simply take $U_{adj}: a_{0i} > \Delta_{V}$
:::::


:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot2}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 0.5
#| fig.width: 5
df_acc |> ggplot_rate_series(name=dr) + coord_cartesian(ylim=c(0,0.1)) +
  geom_vline(xintercept = t_acc_policy_change, linewidth=0.25, linetype = "dashed")

```
:::
::::

::: {.callout-warning appearance="default"}
Not so fast! $V$ and $U(adj)$ look quite different!
:::



## Case study 3: acceptance policy change  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * Acceptance policy change at $t_{\text{change}} = 70$
$$\text{acc_policy}(t_0): \begin{align*} t_0<t_{\text{change}} &=  U \\ t_0\ge t_{\text{change}} &=  V \end{align*}$$

 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$
 * We can simply take $U_{adj}: a_{0i} > \Delta_{V}$
:::::
::: {.callout-warning appearance="default"}
Not so fast! $V$ and $U(adj)$ look quite different!
:::


:::
::: {.column width="50%" .r-fit-text }

```{r acc_adj_plot2}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 0.5
#| fig.width: 5
#| 
```

```{r acc_dr_m}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 0.5
#| fig.width: 5


ggplot2::theme_set(ggtheme)
pp <- case_study_3_data |>
  filter(!d) |> 
  mutate(acc_policy = case_when(acc_policy == "U" & a0>acc_policy_threshold["V"] ~ "U(adj)", TRUE~ acc_policy)) |> 
  group_by(acc_policy) |>  
  summarise_binom_rate_ci(name=dr_m,t=m,indicator = into_d_12, ci_fun = binom::binom.exact, conf.level = 0.5)|> 
  ggplot_rate_series(t=m,name=dr_m) + coord_cartesian(ylim=c(0,0.1), xlim=c(0,20)) + ylab("Default rate") + xlab("maturity")

pp$layers <- pp$layers[1:2]
pp
```


:::
::::


## Case study 3: acceptance policy change  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * Acceptance policy change at $t_{\text{change}} = 70$
$$\text{acc_policy}(t_0): \begin{align*} t_0<t_{\text{change}} &=  U \\ t_0\ge t_{\text{change}} &=  V \end{align*}$$

 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$
 * We can simply take $U_{adj}: a_{0i} > \Delta_{V}$
:::::

 * Simply due to maturity dependence
 * In this simple case, this causes no problems
 * Real life not so lucky


:::
::: {.column width="50%" .r-fit-text }

```{r acc_adj_plot2}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 0.5
#| fig.width: 5
```

```{r acc_dr_m}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 0.5
#| fig.width: 5
```


:::
::::



## Case study 4: Two DoD {.smaller .r-fit-text auto-animate=true}

```{r setup2}
case_study_4_data <- readr::read_csv("../../media/case_study_4_data.csv.gz")
```
#### Introduction

In this exercise, you will estimate an **appropriate adjustment** and **MoC A** to account for a difference between the `implemented` DoD used in application and the `simulated` DoD available in historical data. 

Fortunately, some data is available that was collected under the new definition. 

This is a (simulated) data set of a homogeneous portfolio, and there are no risk drivers, grades or other features to distinguish the exposures by. Lucky you!

## Case study 4: Two DoD {.smaller .r-fit-text auto-animate=true}
:::: columns

::: {.column #vcenter width="50%" .r-fit-text }


#### Description

 * One homogeneous portfolio
 * `simulated` DoD available in historical data
 * `implemented` DoD available for $t \ge 95$



#### Assignment

 * Estimate an appropriately adjusted long-run average default rate
 * Bonus Points: calculate a MoC A
 
::: 

::: {.column #vcenter width="50%" .r-fit-text }
```{r plot2}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5 
#|  
source("../../Rscripts/utils.R")

ggplot2::theme_set(ggtheme)
case_study_4_data |> filter(!d) |> summarise_binom_rate_ci(indicator = into_d_12,t=t,name=dr,ci_fun=binom::binom.exact,conf.level = 0.68,n_overlap=12) |> ggplot_rate_series(name=dr)

```
:::

::::


## Case study 4: Two DoD {.smaller .r-fit-text auto-animate=true}


:::: columns
::: {.column width="50%" .r-fit-text }


| column    | description    |
|-------------|-------------|
|`i`| exposure id|
|`t`| time|
|`DoD`| `simulated` or `implemented`|
|`d`| in-default|
|`into_d_12`| into default within 12 months|
|`status`| `enter`, `stock`, `default` or `exit`|


:::
::: {.column width="50%" .r-fit-text .smaller}

```{r echo=FALSE}
#| tbl-cap: "sample of 10 exposures" 

case_study_4_data |>
  filter(i %in% sample(i,10)) |> 
  as.data.frame()
```
[ [link to xlsx]{.underline}](/media/case_study_4_data.xlsx)

[ [link to csv.gz]{.underline}](/media/case_study_4_data.csv.gz)
:::
::::



## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}

::: {style="color:darkgrey"}

 * `implemented` DoD to be used in application and the `simulated` DoD available based on historical data
 * Estimate an appropriate adjustment and MoC A

:::

#### Approach

Use different assumptions/scenarios:

 A) Assume that $\bar{R}^{(impl)}_{(12)} = \alpha \bar{R}^{(sim)}_{(12)} + \epsilon$, where $\bar{R}_{(n)}$ is an observed average $n$-month into-default rate. In words, assume that any average default rate over a fixed period under the new default definition is a constant facator times that under the simulated one.

 B) Assume that $R^{(impl)}_{(12)}(t) = \alpha + \beta R^{(sim)}_{(12)}(t) + \epsilon$, where $R_{(n)}(t)$ is the observed $n$-month into-default rate at reference date $t$. In words, assume that not the long-run average 12-month, but the monthly 12-month into-default rate under the new definition is linearly related to the simulated one.


## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}

::: {style="color:darkgrey"}
 * `implemented` DoD to be used in application and the `simulated` DoD available in historical data
 * Estimate an appropriate adjustment and MoC A
 * Scenario A: $\bar{R}^{(impl)}_{(12)} = \alpha \bar{R}^{(sim)}_{(12)} + \epsilon$
 * Scenario B: $R^{(impl)}_{(12)}(t) = \alpha + \beta R^{(sim)}_{(12)}(t) + \epsilon$

:::

#### Approach
For each of these scenarios,

 1) Estimate $\alpha$ resp. $\beta$ based on the overlapping period.
 2) Based on your estimates, derive appropriately adjusted default rates.
 3) Also estimate the uncertainty of $\alpha$ resp. $\beta$.
 4) Using error propagation, derive the corresponding **additional** uncertainty of the estimated adjusted long-run average default rate.

## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}

::: {style="color:darkgrey"}
 * `implemented` DoD to be used in application and the `simulated` DoD available in historical data
 * Estimate an appropriate adjustment and MoC A
 * Scenario A: $\bar{R}^{(impl)}_{(12)} = \alpha \bar{R}^{(sim)}_{(12)} + \epsilon$
 * Scenario B: $R^{(impl)}_{(12)}(t) = \alpha + \beta R^{(sim)}_{(12)}(t) + \epsilon$
:::


## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
#### (A) Constant ratio of averages of 12-month into-default rates

:::: columns
::: {.column width="50%" .r-fit-text }
Here, we assume

$$\text{D}^{\prime}_{\text{LRA}}=(\alpha\pm \sigma_{\alpha})\cdot\text{D}^{(sim)}_{\text{LRA}} $$

with

$$\alpha = \frac{\bar{\text{D}}^{(impl)}}{\bar{\text{D}}^{(sim)}}$$ 

:::
::: {.column width="50%" .r-fit-text }
```{r plot2}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
```
:::
::::


## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
#### (A) Constant ratio of averages of 12-month into-default rates

:::: columns
::: {.column width="50%" .r-fit-text }
Here, we assume

$$\bar{D}^{\prime}_{\text{LRA}}=(\alpha\pm \sigma_{\alpha})\cdot\bar{D}^{(sim)}_{\text{LRA}} $$

with

$$\alpha = \frac{\bar{\text{D}}^{(impl)}}{\bar{\text{D}}^{(sim)}}|_{overlapping\ period}$$ 

and

$$\sigma_\alpha^2 \approx \alpha^2(\frac{\sigma_{(impl)}^2}{\bar{\text{D}}_{(impl)}^2} +\frac{\sigma_{(sim)}^2}{\bar{\text{D}}_{(sim)}^2} $$

$$-2\rho_{(old),(new)}\frac{\sigma_{(sim)}\sigma_{(impl)}}{\bar{\text{D}}_{(sim)} \bar{\text{D}}_{(impl)}})$$

:::
::: {.column width="50%" .r-fit-text }
```{r unadj-dist_11}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5


ggplot2::theme_set(ggtheme)
case_study_4_summary_overlap <- case_study_4_data |> filter(!d) |> group_by(t) |> 
  filter(any(DoD=="implemented")) |> group_by(DoD) |>
    summarise_binom_rate_ci(indicator = into_d_12,t=t,name=dr,ci_fun=binom::binom.exact,conf.level = 0.68,n_overlap=12) 

df_adj <- case_study_4_summary_overlap |> 
  mutate(dr_avg_var = (dr_avg_upper - dr_avg) ^ 2) |> 
  pivot_wider(values_from = starts_with("dr"), names_from = "DoD") |>
  mutate(
    dr_avg_cor = cor(dr_implemented, dr_simulated)) |> 
  first() |> 
  select(starts_with("dr_avg")) |> 
  mutate(
    alpha = dr_avg_implemented / dr_avg_simulated,
    se_alpha = alpha * sqrt(
      dr_avg_var_implemented / dr_avg_implemented ^ 2 + 
        dr_avg_var_simulated / dr_avg_simulated ^ 2 - 
        2 * dr_avg_cor * sqrt(dr_avg_var_implemented * dr_avg_var_simulated) / (dr_avg_implemented * dr_avg_implemented)
    )
  )

case_study_4_summary <- case_study_4_data |> filter(!d) |> group_by(DoD) |>
    summarise_binom_rate_ci(indicator = into_d_12,t=t,name=dr,ci_fun=binom::binom.exact,conf.level = 0.68,n_overlap=12) |> 
    pivot_wider(values_from = starts_with("dr"), names_from = "DoD") |>
  mutate(
    dr_avg_adjusted = dr_avg_simulated*df_adj$alpha[[1]],
    dr_avg_se_adjusted = dr_avg_simulated*df_adj$se_alpha[[1]],
    dr_avg_upper_adjusted = dr_avg_adjusted+dr_avg_se_adjusted,
    dr_avg_lower_adjusted = dr_avg_adjusted-dr_avg_se_adjusted,
    dr_adjusted = dr_simulated*df_adj$alpha[[1]],
    dr_se_adjusted = sqrt((df_adj$alpha[[1]]*(dr_simulated-dr_lower_simulated))^2 + (df_adj$se_alpha[[1]]*dr_simulated)^2),
    dr_lower_adjusted = pmax(0,dr_adjusted-dr_se_adjusted),
    dr_upper_adjusted = dr_adjusted+dr_se_adjusted
    ) |> 
  pivot_longer(cols=starts_with("dr"), names_to = c(".value","DoD"), names_pattern = "(.+)_([^_]+)") |> 
  select(-ends_with("_se"))
  

  case_study_4_summary |> filter(DoD!="adjusted") |> group_by(DoD) |> ggplot_rate_series(name=dr) + 
  labs(caption=stringr::str_wrap("Stationary portfolio simulated default rate, DoD threshold at 0 (Old) and 1 (New). All but the last 25 periods are masked for the New DoD.", 60))

```

:::
::::



## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
#### (A) Constant ratio of averages of 12-month into-default rates

:::: columns
::: {.column width="50%" .r-fit-text }
$$\bar{D}^{\prime}_{\text{LRA}}=(\alpha\pm \sigma_{\alpha})\cdot\bar{D}^{(sim)}_{\text{LRA}} $$

$$\alpha = \frac{\bar{\text{D}}^{(impl)}}{\bar{\text{D}}^{(sim)}}|_{overlapping\ period} = 1.55 \pm 0.73$$ 

::: {.callout-warning appearance="default"}
Rather large additional uncertainty (using non-overlapping windows)
:::

:::
::: {.column width="50%" .r-fit-text }
```{r unadj-dist_32}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5


ggplot2::theme_set(ggtheme)
case_study_4_summary  |> group_by(DoD) |> ggplot_rate_series(name=dr) + 
  labs(caption=stringr::str_wrap("Stationary portfolio simulated default rate, DoD threshold at 0 (Old) and 1 (New). All but the last 25 periods are masked for the New DoD.", 60))
```
:::
::::

## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
##### (B) Monthly 12-month into-default rates
```{r dr_scen_B}

case_study_4_summary_overlap2 <- case_study_4_data |> 
  filter(!d) |> 
  group_by(t) |> 
  filter(any(DoD=="implemented")) |> 
  group_by(DoD) |>
  summarise_binom_rate_ci(indicator = into_d_12,t=t,name=dr,ci_fun=binom::binom.exact,conf.level = 0.68,n_overlap=12)  |> 
  tidyr::pivot_wider(values_from = starts_with("dr"), names_from = "DoD")

lm_adj <- lm(data = case_study_4_summary_overlap2, formula = dr_implemented ~ dr_simulated)


df_adj_wide <- case_study_4_data |> 
  filter(!d) |> 
  group_by(DoD) |> 
  summarise_binom_rate_ci(indicator = into_d_12,t=t,name=dr,ci_fun=binom::binom.exact,conf.level = 0.68,n_overlap=12)|> 
  tidyr::pivot_wider(values_from = starts_with("dr"), names_from = "DoD") %>% 
  broom::augment(lm_adj, newdata=., se_fit = TRUE) |> 
  mutate(
    dr_adjusted = .fitted, 
    dr_lower_adjusted = .fitted-.se.fit, 
    dr_upper_adjusted =  .fitted+.se.fit,
    dr_avg_adjusted_ttest = broom::tidy(t.test(dr_adjusted)),
    dr_avg_adjusted = dr_avg_adjusted_ttest$estimate,
    dr_avg_lower_adjusted = dr_avg_adjusted_ttest$estimate - (dr_avg_adjusted_ttest$estimate - dr_avg_adjusted_ttest$conf.low) * sqrt(12),
    dr_avg_upper_adjusted = dr_avg_adjusted_ttest$estimate + (dr_avg_adjusted_ttest$conf.high - dr_avg_adjusted_ttest$estimate) * sqrt(12)
  ) |> 
  select(-dr_avg_adjusted_ttest)


df_adj_long <- df_adj_wide|> 
  pivot_longer(cols=starts_with("dr"), names_to = c(".value","DoD"), names_pattern = "(.+)_([^_]+)") 

```
:::: columns
::: {.column width="50%" .r-fit-text }
Here, we assume

$$D^{(adj)}_{(12)}(t) = constant + \beta\cdot D^{(sim)}_{(12)}(t) +\epsilon$$


:::
::: {.column width="50%" .r-fit-text }

:::
::::



## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
##### (B) Monthly 12-month into-default rates
 
:::: columns
::: {.column width="50%" .r-fit-text }
Here, we assume

$$D^{(adj)}_{(12)}(t) = constant + \beta\cdot D^{(sim)}_{(12)}(t) +\epsilon$$


:::
::: {.column width="50%" .r-fit-text }
```{r unadj-dist_4}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5

ggplot2::theme_set(ggtheme)
df_adj_wide |> ggplot(aes(x=t)) + 
    stat_lineribbon(aes(ydist=distributional::dist_student_t(df=df.residual(lm_adj), mu = .fitted, sigma = .se.fit)), alpha = 0.33*1/4, fill="darkred", linewidth=.4)+
    geom_line(data=df_adj_long, aes(y=dr, color=DoD)) +
    scale_y_continuous(labels = scales::label_percent(accuracy = .1)) + coord_cartesian(ylim=c(0,NA))

```
:::
::::



## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
##### (B) Monthly 12-month into-default rates
 
:::: columns
::: {.column width="50%" .r-fit-text }
Here, we assume

$$D^{(adj)}_{(12)}(t) = constant + \beta\cdot D^{(sim)}_{(12)}(t) +\epsilon$$
 
$$\bar{D}^{(adj)} = \sum_t D^{(adj)}_{(12)}(t) / T $$



:::
::: {.column width="50%" .r-fit-text }
```{r unadj-dist_513}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5

ggplot2::theme_set(ggtheme)
df_adj_long |> group_by(DoD) |>  ggplot_rate_series(t=t,name=dr)
```
:::
::::


## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
##### (B) Monthly 12-month into-default rates
 
:::: columns
::: {.column width="50%" .r-fit-text }
Here, we assume

$$D^{(adj)}_{(12)}(t) = constant + \beta\cdot D^{(sim)}_{(12)}(t) +\epsilon$$
 
$$\bar{D}^{(adj)} = \sum_t D^{(adj)}_{(12)}(t) / T $$

The regression standard errors are propagated to the 12-month adjusted default rate to obtain the *additional* uncertainty due to the adjustment.


:::
::: {.column width="50%" .r-fit-text }
```{r unadj-dist_519}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
ggplot2::theme_set(ggtheme)

case_study_4_summary_overlap2 |> 
  modelr::data_grid(dr_simulated = modelr::seq_range(dr_simulated, n=100)) %>%
  broom::augment(lm_adj, newdata=., se_fit = TRUE) |> 
  ggplot(aes(x=dr_simulated)) + 
    stat_lineribbon(aes(ydist=distributional::dist_student_t(df=df.residual(lm_adj), mu = .fitted, sigma = .se.fit)), alpha = 0.33*1/4, fill="darkred", linewidth=.4) +
  geom_point(data=case_study_4_summary_overlap2, aes(y=dr_implemented))  + scale_x_continuous(labels = scales::label_percent(accuracy = .1)) + scale_y_continuous(labels = scales::label_percent(accuracy = .1)) + coord_cartesian(ylim=c(0,NA))


```
:::
::::

## Case study 4: reflection {auto-animate=true}

::: {.callout-important icon=true appearance="default" .r-fit-text}

 * Simpler approaches may inflate estimated additional uncertainty $\rightarrow €€€$ capital
 * However, this second approach ignores that $cov(\epsilon_t,\epsilon_{t+1..12})>>0$ and therefore underestimates $\sigma(\bar{D}^{adj})$

:::



## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
##### (C) Monthly 1-month into-default rates
 
:::: columns
::: {.column width="50%" .r-fit-text }
Here, we assume

$$D^{(adj)}_{(1)}(t) = constant + \beta\cdot D^{(sim)}_{(1)}(t) +\epsilon$$

This reduces autocorrelation and underestimation of error term.

:::
::: {.column width="50%" .r-fit-text }
```{r dr_scen_C}

df_dr1 <- case_study_4_data |> 
  arrange(t) |> 
  group_by(DoD,i) |> 
  mutate(into_d_1 = slider::slide_any(d,after = 1, complete = FALSE, na_rm = TRUE)) |> 
  ungroup()

case_study_4_summary_overlap2_dr1 <- df_dr1 |> 
  filter(!d) |> 
  group_by(t) |> 
  filter(any(DoD=="implemented")) |> 
  group_by(DoD) |>
  summarise_binom_rate_ci(indicator = into_d_1,t=t,name=dr1,ci_fun=binom::binom.exact,conf.level = 0.68,n_overlap=1)  |> 
  tidyr::pivot_wider(values_from = starts_with("dr"), names_from = "DoD")

lm_adj <- lm(data = case_study_4_summary_overlap2_dr1, formula = dr1_implemented ~ dr1_simulated)


df_adj_wide1 <- df_dr1 |> 
  filter(!d) |> 
  group_by(DoD) %>%
  {left_join(
    summarise_binom_rate_ci(., indicator = into_d_1,t=t,name=dr1,ci_fun=binom::binom.exact,conf.level = 0.68,n_overlap=1),   
    summarise_binom_rate_ci(., indicator = into_d_12,t=t,name=dr,ci_fun=binom::binom.exact,conf.level = 0.68,n_overlap=12), 
    by = join_by(DoD, t)) } |> 
  tidyr::pivot_wider(values_from = starts_with("dr"), names_from = "DoD") %>% 
  broom::augment(lm_adj, newdata=., se_fit = TRUE) |> 
  mutate(
    dr_adjusted = 1-(1-.fitted)^12, 
    dr_lower_adjusted = 1-(1-.fitted+.se.fit)^12, 
    dr_upper_adjusted =  1-(1-.fitted-.se.fit)^12,
    dr_avg_adjusted_ttest = broom::tidy(t.test(dr_adjusted)),
    dr_avg_adjusted = dr_avg_adjusted_ttest$estimate,
    dr_avg_lower_adjusted = dr_avg_adjusted_ttest$estimate - (dr_avg_adjusted_ttest$estimate - dr_avg_adjusted_ttest$conf.low) * sqrt(12),
    dr_avg_upper_adjusted = dr_avg_adjusted_ttest$estimate + (dr_avg_adjusted_ttest$conf.high - dr_avg_adjusted_ttest$estimate) * sqrt(12)
  ) |> 
  select(-dr_avg_adjusted_ttest)


df_adj_long1 <- df_adj_wide1|> 
  pivot_longer(cols=starts_with("dr"), names_to = c(".value","DoD"), names_pattern = "(.+)_([^_]+)") 





```
:::
::::



## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
##### (C) Monthly 1-month into-default rates

:::: columns
::: {.column width="50%" .r-fit-text }


$$D^{(adj)}_{(1)}(t) = constant + \beta\cdot D^{(sim)}_{(1)}(t) +\epsilon$$

Still not too convincing.

:::
::: {.column width="50%" .r-fit-text }
```{r unadj-dist_14}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
ggplot2::theme_set(ggtheme)

case_study_4_summary_overlap2_dr1 |> 
  modelr::data_grid(dr1_simulated = modelr::seq_range(dr1_simulated, n=100)) %>%
  broom::augment(lm_adj, newdata=., se_fit = TRUE) |> 
  ggplot(aes(x=dr1_simulated)) + 
    stat_lineribbon(aes(ydist=distributional::dist_student_t(df=df.residual(lm_adj), mu = .fitted, sigma = .se.fit)), alpha = 0.33*1/4, fill="darkred", linewidth=.4) +
  geom_point(data=case_study_4_summary_overlap2_dr1, aes(y=dr1_implemented))  + scale_x_continuous(labels = scales::label_percent(accuracy = .1)) + scale_y_continuous(labels = scales::label_percent(accuracy = .1)) + coord_cartesian(ylim=c(0,NA))



```
:::
::::

## Case study 4: one Dod, two Dod {.smaller .r-fit-text auto-animate=true}
##### (C) Monthly 1-month into-default rates 
:::: columns
::: {.column width="50%" .r-fit-text }
Here, we assume

$$D^{(adj)}_{(1)}(t) = constant + \beta\cdot D^{(sim)}_{(1)}(t) +\epsilon$$

Extrapolation to 12-month into-default rate:

$$D^{(adj)}_{(12)}(t) = 1 - (1 - D^{(adj)}_{(1)}(t))^{12}$$

$$\sigma^{(adj)}_{(12)}(t) = 1 - (1 - \sigma^{(adj)}_{(1)})(1 - D^{(adj)}_{(1)})^{11}$$




:::
::: {.column width="50%" .r-fit-text }
```{r unadj-dist_16}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
ggplot2::theme_set(ggtheme)
df_adj_long1 |> group_by(DoD) |>  ggplot_rate_series(t=t,name=dr)
      

```
:::
::::



## Case study 5: acceptance policy change (2) {.smaller .r-fit-text auto-animate=true}


#### Introduction


In this exercise, you will **estimate an appropriate adjustment and MoC A** to account for the bias introduced by having a **non-comparable acceptance policy** applied for exposures over part of the historical data set. 

[Hard mode unlocked!]{style="color:red"}

```{r setup3}
cred_sim2 <- vroom::vroom("../../media/cred_sim2.csv.gz")
cred_sim_acc2 <- vroom::vroom("../../media/cred_sim_acc2.csv.gz")
cred_sim_acc_aggr_dr2 <- vroom::vroom("../../media/cred_sim_acc_aggr_dr2.csv.gz")

```


## Case study 5: acceptance policy change (2) {.smaller .r-fit-text auto-animate=true}


:::: columns
::: {.column width="50%" .r-fit-text }


| column    | description    |
|-------------|-------------|
|`i`| exposure id|
|`t`| time|
|`d`| in-default|
|`into_d_12`| into default within 12 months|
|`status`| `enter`, `stock`, `default` or `exit`|
|`m`|time since origination|
|`t0`| t of origination|
|`a0`| debt service to income at origination score|
|`acc_policy`| `U` or `V`|

:::
::: {.column width="50%" .r-fit-text .smaller}

```{r}
case_study_5_data <- readr::read_csv("../../media/case_study_5_data.csv.gz")
``` 

```{r echo=FALSE}
#| tbl-cap: "sample of 10 exposures" 

case_study_5_data |>
  filter(i %in% sample(i,10)) |> 
  as.data.frame()
```
[ [link to xlsx]{.underline}](/media/case_study_5_data.xlsx)

[ [link to csv.gz]{.underline}](/media/case_study_5_data.csv.gz)
:::
::::



## Case study 5: acceptance policy change (2)  {.smaller .r-fit-text auto-animate=true}

```{r cs_5_calc}


df_acc_s <- case_study_5_data |> 
  filter(!d) |> 
  group_by(acc_policy) |> 
  summarise_binom_rate_ci(name=dr, indicator = into_d_12, ci_fun = binom::binom.exact)

df_acc_m <- case_study_5_data |>
  group_by(acc_policy) |>  
  summarise_binom_rate_ci(name=dr_m,t=m,indicator = into_d_12, ci_fun = binom::binom.exact, conf.level = 0.5) |> filter(m<20) |> 
    tidyr::pivot_wider(values_from = starts_with("dr"), names_from = "acc_policy")



lm_m_adj <- MASS::rlm(formula=dr_m_V ~ dr_m_U, data=df_acc_m)

df_adj_m <- case_study_5_data |>
  filter(!d, acc_policy == "U") |> 
  group_by(acc_policy) |>  
  summarise_binom_rate_ci(name=dr_m_U,t=m,indicator = into_d_12, ci_fun = binom::binom.exact, conf.level = 0.5) %>%
  {broom::augment(lm_m_adj, se_fit=TRUE,newdata=.) |> mutate(w_dr_m = if_else(dr_m_U>0,.fitted/dr_m_U,.fitted/dr_m_U_upper))} |> select(acc_policy, m,dr_m_U,.fitted,.se.fit, w_dr_m) 

dfadjm <- bind_rows(
  case_study_5_data |> mutate(w_dr_m=1.),
  case_study_5_data |> filter(acc_policy=="U") |> 
  left_join(df_adj_m) |> mutate(acc_policy = "U(adj)")) |> select(-dr_m_U,-.fitted,-.se.fit) |> filter(!d)
  


```
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70$
$$\text{acc_policy}(t_0): \begin{align*} t_0<t_{\text{change}} &=  U \\ t_0 \ge t_{\text{change}} &=  V \end{align*}$$

 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$
:::::

 * In this case, $\Delta_{V} > \Delta_{U}$ 
 * Loans that originate under `U` *not* subset of those under `V`
 * We can**not** simply take $U_{adj}: a_{0i} > \Delta_{V}$

:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot3}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 
ggplot2::theme_set(ggtheme)
df_acc_s |> ggplot_rate_series(name=dr) + coord_cartesian(ylim=c(0,0.05)) +
  geom_vline(xintercept = t_acc_policy_change, linewidth=0.25, linetype = "dashed")
```
:::
::::




## Case study 5: acceptance policy change (2)  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70$
 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$
 * In this case, $Delta_{V} > Delta_{U}$!
:::::

##### Options

 * Same trick in reverse (estimate ratio of $dr_V(a0>\Delta_{V})/dr_U$  )
   - Pro/con: Simple yet boring
 * Estimate based on a stratum of interest
   - What could it be?

:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot3}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 
```
:::
::::




## Case study 5: acceptance policy change (2)  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70$
 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$
 * In this case, $Delta_{V} > Delta_{U}$!
:::::
 * Estimate based on a stratum of interest (`m`)
  - in real life: verify that dependence on `m` is similar across time (typically not)

:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot4}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 
ggplot2::theme_set(ggtheme)
dfadjm |> filter(acc_policy!="U(adj)") |> group_by(acc_policy) |> summarise_binom_rate_ci_weight(t=m,name=dr,indicator=into_d_12,weight=w_dr_m, ci_fun = binom::binom.exact) |> ggplot_rate_series(t=m, name=dr,avg_postfix = NULL) + coord_cartesian(xlim=c(0,25), ylim=c(0,0.1))
```
:::
::::




## Case study 5: acceptance policy change (2)  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70$
 * $U,V$ apply a different threshold $a_0>\Delta_{\text{acc_policy}(t_0)}$
 * In this case, $Delta_{V} > Delta_{U}$!
:::::
 * Estimate based on a stratum of interest
   - Knowing the underlying model helps

:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot45}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 

ggplot(df_acc_m,aes(dr_m_V,dr_m_U)) + geom_smooth(method = "lm", color="wheat1", fill = "wheat4") + geom_point(color="brown")+scale_x_continuous(labels = scales::label_percent(accuracy = 1)) +scale_y_continuous(labels = scales::label_percent(accuracy = 1)) + scale_fill_brewer() +
  labs(x="Default rate (maturity month), V policy",
       y="Default rate (maturity month), U policy")
```
:::
::::



## Case study 5: acceptance policy change (2)  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70, $Delta_{V} > Delta_{U}$!
 * Estimate based on a stratum of interest

:::::
   - Knowing the underlying model helps

:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot44}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 
ggplot2::theme_set(ggtheme)
dfadjm |> group_by(acc_policy) |> summarise_binom_rate_ci_weight(t=m,name=dr,indicator=into_d_12,weight=w_dr_m, ci_fun = binom::binom.exact) |> ggplot_rate_series(t=m, name=dr,avg_postfix = NULL) + coord_cartesian(xlim=c(0,25), ylim=c(0,0.1))
```
:::
::::

## Case study 5: acceptance policy change (2)  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70, $Delta_{V} > Delta_{U}$!
 * Estimate based on a stratum of interest
:::::
 
 * Scale observed default rates in $U$ according to maturity bucket $\rightarrow U(adj)$
 * Noisy estimate of per policy adjusted default rate
 

:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot42d4}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 
ggplot2::theme_set(ggtheme)
dfadjm |> group_by(acc_policy) |> summarise_binom_rate_ci_weight(name=dr,indicator=into_d_12,weight=w_dr_m, ci_fun=binom::binom.exact, conf.level = 0.5)|> ggplot_rate_series(name=dr) + coord_cartesian(ylim=c(0,0.1)) 

```
:::
::::


## Case study 5: acceptance policy change (2)  {.smaller .r-fit-text auto-animate=true}
:::: columns
::: {.column width="50%" .r-fit-text }
::::: {style="color:darkgrey"}
 * One homogeneous portfolio, one DoD, two acceptance policies $U,V$
 * Acceptance policy change at $t_{\text{change}} = 70, $Delta_{V} > Delta_{U}$!
 * Estimate based on a stratum of interest
:::::
 
 * Scale observed default rates $D^{(adj)}_{(12)}(t)$ in $U$ according to maturity bucket $\rightarrow U(adj)$

 * $$\bar{D}^{(adj)} = \sum_t D^{(adj)}_{(12)}(t) / T $$

 * Use (block-)bootstrap for errors
 

:::
::: {.column width="50%" .r-fit-text }
```{r acc_adj_plot4d4}
#| dev.args:
#|   bg: "transparent"
#| fig.asp: 1
#| fig.width: 5
#| 
ggplot2::theme_set(ggtheme)

bind_rows(
  unadjusted = case_study_5_data |> 
  filter(!d) |> 
  summarise_binom_rate_ci(name=dr, indicator = into_d_12, ci_fun = binom::binom.exact),
  adjusted = dfadjm |> ungroup() |> summarise_binom_rate_ci_weight(name=dr,indicator=into_d_12,weight=w_dr_m),
  .id = "type") |> group_by(type) |> ggplot_rate_series(name=dr) + coord_cartesian(ylim=c(0,0.1))
```
:::
::::
